package com.mine.chapter04.practice;

/**
 * @author CaoY
 * @date 2023-09-10 21:18
 * @description 练习 4.30
 * 编写一个程序对伸展树执行随机操作，计算所执行的总的旋转次数，与 AVL 树和非平衡二叉查找树相比，其运行时间如何。
 *
 * 回答：程序没有写，因为没有提供伸展树的数据结构。从概念上讲，应该伸展树单次的查找不一定快，其优势体现次重复访问
 * 和多次操作的总时长，感觉伸展树更适合实际的操作。而 AVL 树则是可以保证树的高度不会很高，但是这也给插入和删除树
 * 中的元素带来了平衡的性能损失；非平衡二叉树可能会导致树严重退化为接近链表的结构，它不稳定，不适于实际生产场景。
 *
 * todo 可能会来实现伸展树
 */
public class Solution04_30 {

    public static void main(String[] args) {
        System.out.println("主要是没有伸展树的数据结构，暂时不作实现了");
    }
}
